{
    "summary": "This code uses win32 libraries to find a command prompt window, verify existence, and assigns it a unique ID. It also sends a key press event for 'D' using win32api in an infinite loop.",
    "details": [
        {
            "comment": "This code uses the win32 libraries to open a new command prompt window, assigns it a unique ID, and waits for the window to appear. It then enumerates all top-level windows using EnumWindows callback function to find the window with the assigned ID, and finally asserts that only one window with this ID exists.",
            "location": "\"/media/root/Prima/works/generated_docs/cf_doc/src/windows/winauto/terminal_automation.py\":0-32",
            "content": "#you will need the win32 libraries for this snippet of code to work, Links below\nimport win32gui\nimport win32con\nimport win32api\nimport win32process\nfrom time import sleep\nimport uuid\nunique_id = str(uuid.uuid1())\nimport os\nos.system(\"start cmd.exe /k \\\"title \"+unique_id+\"\\\"\")\n#target = proc.pid\ndef enumWindowFunc(hwnd, windowList):\n    \"\"\" win32gui.EnumWindows() callback \"\"\"\n    text = win32gui.GetWindowText(hwnd)\n#    className = win32gui.GetClassName(hwnd)\n    #print hwnd, text, className\n    if unique_id in text:\n        windowList.append(hwnd)\nsleep(0.1)\nmyWindows = []\n# enumerate thru all top windows and get windows which are ours\nwin32gui.EnumWindows(enumWindowFunc, myWindows)\n#print myWindows\nassert len(myWindows)==1\nhwndMain = myWindows[0]\n#[hwnd] No matter what people tell you, this is the handle meaning unique ID, \n#[\"Notepad\"] This is the application main/parent name, an easy way to check for examples is in Task Manager\n#[\"test - Notepad\"] This is the application sub/child name, an easy way to check for examples is in Task Manager clicking dropdown arrow"
        },
        {
            "comment": "This code finds the main window's Unique ID using \"FindWindow\" and checks if the title is correct. It then gets a sub/child Unique ID by utilizing \"GetWindow\" with GW_CHILD parameter. The hwndChild is assigned to hwndMain, and the code enters an infinite loop (while(True)). The code may need further documentation or testing for multiple child windows.",
            "location": "\"/media/root/Prima/works/generated_docs/cf_doc/src/windows/winauto/terminal_automation.py\":33-49",
            "content": "#hwndMain = win32gui.FindWindow(\"Notepad\", \"test - Notepad\") this returns the main/parent Unique ID\n#hwndMain = win32gui.FindWindow(None, \"Administrator: \"+unique_id)\nprint \"main window handle\", hwndMain\n# check if the title is correct?\n# if it is the direct window.\n#[\"hwndMain\"] this is the main/parent Unique ID used to get the sub/child Unique ID\n#[win32con.GW_CHILD] I havent tested it full, but this DOES get a sub/child Unique ID, if there are multiple you'd have too loop through it, or look for other documention, or i may edit this at some point ;)\n#hwndChild = win32gui.GetWindow(hwndMain, win32con.GW_CHILD) this returns the sub/child Unique ID\n#hwndChild = win32gui.GetWindow(hwndMain, win32con.GW_CHILD)\nhwndChild = hwndMain\n#print(hwndMain) #you can use this to see main/parent Unique ID\n#print(hwndChild)  #you can use this to see sub/child Unique ID\n#While(True) Will always run and continue to run indefinitely\nwhile(True):\n    #[hwndChild] this is the Unique ID of the sub/child application/proccess"
        },
        {
            "comment": "This code uses the win32api to send a key press event (WM_CHAR) for the letter 'D' to a window handle (hwndChild). It prints the returned value of the message sent and waits for 1 second before repeating.",
            "location": "\"/media/root/Prima/works/generated_docs/cf_doc/src/windows/winauto/terminal_automation.py\":50-59",
            "content": "    #[win32con.WM_CHAR] This sets what PostMessage Expects for input theres KeyDown and KeyUp as well\n    #[0x44] hex code for D\n    #[0]No clue, good luck!\n    #temp = win32api.PostMessage(hwndChild, win32con.WM_CHAR, 0x44, 0) returns key sent\n    temp = win32api.PostMessage(hwndChild, win32con.WM_CHAR, 0x44, 0)\n# that is the letter D.\n    #print(temp) prints the returned value of temp, into the console\n    print temp \n    #sleep(1) this waits 1 second before looping through again\n    sleep(1)"
        }
    ]
}